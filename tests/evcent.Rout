
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(igraph)
> 
> kite <- graph.formula(Andre    - Beverly:Carol:Diane:Fernando,
+                       Beverly  - Andre:Diane:Ed:Garth,
+                       Carol    - Andre:Diane:Fernando,
+                       Diane    - Andre:Beverly:Carol:Ed:Fernando:Garth,
+                       Ed       - Beverly:Diane:Garth,
+                       Fernando - Andre:Carol:Diane:Garth:Heather,
+                       Garth    - Beverly:Diane:Ed:Fernando:Heather,
+                       Heather  - Fernando:Garth:Ike,
+                       Ike      - Heather:Jane,
+                       Jane     - Ike)
> kite <- simplify(kite)
> round(evcent(kite)$vector, 3)
   Andre  Beverly    Carol    Diane Fernando       Ed    Garth  Heather 
   0.732    0.732    0.594    1.000    0.827    0.594    0.827    0.407 
     Ike     Jane 
   0.100    0.023 
> 
> ## Eigenvector-centrality, small stress-test
> 
> is.principal <- function(M, lambda, eps=1e-12) {
+   abs(eigen(M)$values[1] - lambda) < eps
+ }
> 
> is.ev <- function(M, v, lambda, eps=1e-12) {
+   max(abs(M %*% v - lambda * v)) < eps
+ }
> 
> is.good <- function(M, v, lambda, eps=1e-12) {
+   is.principal(M, lambda, eps) && is.ev(M, v, lambda, eps)
+ }
> 
> for (i in 1:1000) {
+   G <- erdos.renyi.game(10, sample(1:20, 1), type="gnm")
+   ev <- evcent(G)
+   if (!is.good(get.adjacency(G, sparse=FALSE), ev$vector, ev$value)) {
+     print("Foobar!")
+     break
+   }
+ }
> 
> 
> proc.time()
   user  system elapsed 
  1.842   0.182   2.038 
