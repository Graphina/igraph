
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(igraph) ; igraph.options(print.full=TRUE)
> 
> g <- graph.ring(5)
> summary(g)
IGRAPH U--- 5 5 -- Ring graph
attr: name (g/c), mutual (g/x), circular (g/x)
> g
IGRAPH U--- 5 5 -- Ring graph
+ attr: name (g/c), mutual (g/x), circular (g/x)
+ edges:
[1] 1--2 2--3 3--4 4--5 1--5
> 
> V(g)$name <- letters[1:vcount(g)]
> summary(g)
IGRAPH UN-- 5 5 -- Ring graph
attr: name (g/c), mutual (g/x), circular (g/x), name (v/c)
> g
IGRAPH UN-- 5 5 -- Ring graph
+ attr: name (g/c), mutual (g/x), circular (g/x), name (v/c)
+ edges (vertex names):
[1] a--b b--c c--d d--e a--e
> 
> set.seed(42)
> E(g)$weight <- runif(ecount(g))
> summary(g)
IGRAPH UNW- 5 5 -- Ring graph
attr: name (g/c), mutual (g/x), circular (g/x), name (v/c), weight
  (e/n)
> g
IGRAPH UNW- 5 5 -- Ring graph
+ attr: name (g/c), mutual (g/x), circular (g/x), name (v/c), weight
  (e/n)
+ edges (vertex names):
[1] a--b b--c c--d d--e a--e
> 
> g$name <- "A ring"
> summary(g)
IGRAPH UNW- 5 5 -- A ring
attr: name (g/c), mutual (g/x), circular (g/x), name (v/c), weight
  (e/n)
> print(g, v=T)
IGRAPH UNW- 5 5 -- A ring
+ attr: name (g/c), mutual (g/x), circular (g/x), name (v/c), weight
  (e/n)
+ vertex attributes:
    name
[1]    a
[2]    b
[3]    c
[4]    d
[5]    e
+ edges (vertex names):
[1] a--b b--c c--d d--e a--e
> print(g, e=T)
IGRAPH UNW- 5 5 -- A ring
+ attr: name (g/c), mutual (g/x), circular (g/x), name (v/c), weight
  (e/n)
+ edges (vertex names) and their attributes:
    edge    weight
[1] a--b 0.9148060
[2] b--c 0.9370754
[3] c--d 0.2861395
[4] d--e 0.8304476
[5] a--e 0.6417455
> 
> set.seed(42)
> erdos.renyi.game(13, p=0.6, directed=TRUE)
IGRAPH D--- 13 103 -- Erdos renyi (gnp) graph
+ attr: name (g/c), type (g/c), loops (g/x), p (g/n)
+ edges:
 1 ->  3  4  8  9 10 11 12 13       2 ->  1  3  6  7  8 11 12      
 3 ->  1  2  4  6  8 10 12          4 ->  1  2  3  5  6  8  9 10 13
 5 ->  1  2  3  4  6  9 10          6 ->  1  4  5  7  8  9 10 12 13
 7 ->  1  3  5  6  9 10 11 12 13    8 ->  1  2  5  7 10 12 13      
 9 ->  1  2  3  5  6  7 10 12 13   10 ->  1  2  4  5  6  7  8  9 11
11 ->  1  2  4  6  7  8 10 13      12 ->  1  2  3  4  6  9 10      
13 ->  2  3  4  7  8  9 10      
> 
> erdos.renyi.game(20, p=0.8)
IGRAPH U--- 20 160 -- Erdos renyi (gnp) graph
+ attr: name (g/c), type (g/c), loops (g/x), p (g/n)
+ edges:
 1 --  2  4  5  6  7  8  9 10 11 13 14 15 16 18 19 20
 2 --  1  3  4  5  6  7  8  9 10 11 12 14 16 17 18 19 20
 3 --  2  5  6  7  8  9 10 11 12 14 15 16 18 19 20
 4 --  1  2  6  8 10 12 13 15 16 17 18 19 20
 5 --  1  2  3  6  7  8  9 10 12 13 14 15 16 17 18 19 20
 6 --  1  2  3  4  5  7  8 11 12 13 14 15 16 17 18 19 20
 7 --  1  2  3  5  6  8 10 11 12 13 14 15 16 17 18 19 20
 8 --  1  2  3  4  5  6  7  9 10 11 12 13 14 15 16 17 18 19
 9 --  1  2  3  5  8 11 12 15 16 17 18 19 20
10 --  1  2  3  4  5  7  8 11 12 13 14 15 17 18 20
11 --  1  2  3  6  7  8  9 10 12 13 14 15 16 18 19 20
12 --  2  3  4  5  6  7  8  9 10 11 13 14 15 18 19 20
13 --  1  4  5  6  7  8 10 11 12 14 15 16 19 20
14 --  1  2  3  5  6  7  8 10 11 12 13 15 16 17 18 19 20
15 --  1  3  4  5  6  7  8  9 10 11 12 13 14 18 19 20
16 --  1  2  3  4  5  6  7  8  9 11 13 14 17 18 19 20
17 --  2  4  5  6  7  8  9 10 14 16 18 19 20
18 --  1  2  3  4  5  6  7  8  9 10 11 12 14 15 16 17 19 20
19 --  1  2  3  4  5  6  7  8  9 11 12 13 14 15 16 17 18 20
20 --  1  2  3  4  5  6  7  9 10 11 12 13 14 15 16 17 18 19
> 
> graph.star(100)
IGRAPH D--- 100 99 -- In-star
+ attr: name (g/c), mode (g/c), center (g/n)
+ edges:
 [1]   2->1   3->1   4->1   5->1   6->1   7->1   8->1   9->1  10->1  11->1
[11]  12->1  13->1  14->1  15->1  16->1  17->1  18->1  19->1  20->1  21->1
[21]  22->1  23->1  24->1  25->1  26->1  27->1  28->1  29->1  30->1  31->1
[31]  32->1  33->1  34->1  35->1  36->1  37->1  38->1  39->1  40->1  41->1
[41]  42->1  43->1  44->1  45->1  46->1  47->1  48->1  49->1  50->1  51->1
[51]  52->1  53->1  54->1  55->1  56->1  57->1  58->1  59->1  60->1  61->1
[61]  62->1  63->1  64->1  65->1  66->1  67->1  68->1  69->1  70->1  71->1
[71]  72->1  73->1  74->1  75->1  76->1  77->1  78->1  79->1  80->1  81->1
[81]  82->1  83->1  84->1  85->1  86->1  87->1  88->1  89->1  90->1  91->1
[91]  92->1  93->1  94->1  95->1  96->1  97->1  98->1  99->1 100->1
> 
> graph.star(100, mode="out")
IGRAPH D--- 100 99 -- Out-star
+ attr: name (g/c), mode (g/c), center (g/n)
+ edges:
 [1] 1->  2 1->  3 1->  4 1->  5 1->  6 1->  7 1->  8 1->  9 1-> 10 1-> 11
[11] 1-> 12 1-> 13 1-> 14 1-> 15 1-> 16 1-> 17 1-> 18 1-> 19 1-> 20 1-> 21
[21] 1-> 22 1-> 23 1-> 24 1-> 25 1-> 26 1-> 27 1-> 28 1-> 29 1-> 30 1-> 31
[31] 1-> 32 1-> 33 1-> 34 1-> 35 1-> 36 1-> 37 1-> 38 1-> 39 1-> 40 1-> 41
[41] 1-> 42 1-> 43 1-> 44 1-> 45 1-> 46 1-> 47 1-> 48 1-> 49 1-> 50 1-> 51
[51] 1-> 52 1-> 53 1-> 54 1-> 55 1-> 56 1-> 57 1-> 58 1-> 59 1-> 60 1-> 61
[61] 1-> 62 1-> 63 1-> 64 1-> 65 1-> 66 1-> 67 1-> 68 1-> 69 1-> 70 1-> 71
[71] 1-> 72 1-> 73 1-> 74 1-> 75 1-> 76 1-> 77 1-> 78 1-> 79 1-> 80 1-> 81
[81] 1-> 82 1-> 83 1-> 84 1-> 85 1-> 86 1-> 87 1-> 88 1-> 89 1-> 90 1-> 91
[91] 1-> 92 1-> 93 1-> 94 1-> 95 1-> 96 1-> 97 1-> 98 1-> 99 1->100
> 
> ba.game(100, m=6, directed=FALSE)
IGRAPH U--- 100 579 -- Barabasi graph
+ attr: name (g/c), power (g/n), m (g/n), zero.appeal (g/n), algorithm
  (g/c)
+ edges:
  1 --   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  18  19  20
        21  22  23  24  25  26  28  29  30  32  33  34  35  36  37  38  39  41
        42  44  45  46  48  49  50  51  52  53  54  55  56  57  58  59  60  61
        63  64  65  66  67  68  69  70  71  72  73  74  76  77  78  79  80  82
        83  84  85  87  90  91  92  93  94  97
  2 --   1   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18  19  21
        22  24  25  26  27  28  29  30  31  32  38  39  41  42  44  45  48  51
        52  53  54  55  56  57  58  60  62  63  64  65  67  69  71  74  76  77
        78  79  81  82  83  87  88  91  96  97  98  99 100
  3 --   1   2   4   5   6   7   8   9  10  11  12  13  16  19  20  21  25  26
        27  29  33  35  37  38  39  40  46  49  50  54  57  58  63  66  79  86
        89  95 100
  4 --   1   2   3   5   6   7   8   9  11  13  16  20  22  24  26  31  32  36
        37  42  47  49  51  59  60  64  67  70  73  75  77  81  82  85  87  92
        93  99
  5 --   1   2   3   4   6   7   8   9  11  13  14  16  18  19  20  22  23  25
        26  29  30  32  33  34  37  43  44  45  46  48  50  52  56  58  61  66
        68  72  86  88  90  91  96
  6 --   1   2   3   4   5   7   8   9  10  12  13  15  18  20  22  23  24  25
        27  28  36  38  39  42  43  44  45  46  50  51  52  55  57  58  59  61
        63  64  65  68  75  78  79  80  81  82  83  86  88  90  94  95  97  98
  7 --   1   2   3   4   5   6  10  11  12  15  16  17  19  20  22  23  24  26
        27  28  30  31  32  34  35  39  41  45  46  47  49  50  54  55  56  60
        61  62  66  69  70  72  75  76  77  78  79  80  81  84  85  88  89  94
       100
  8 --   1   2   3   4   5   6  10  15  17  29  30  34  36  38  42  47  50  51
        54  61  62  64  66  70  71  73  77  81  82  84  93  97  99
  9 --   1   2   3   4   5   6  11  12  18  30  44  47  48  84  85  86
 10 --   1   2   3   6   7   8  12  14  21  27  35  40  48  66  70  90  92  94
        99
 11 --   2   3   4   5   7   9  23  28  40  46  55
 12 --   1   3   6   7   9  10  14  15  17  21  28  33  38  47  51  53  56  60
        67  77
 13 --   1   2   3   4   5   6  14  17  18  19  21  29  33  35  36  37  43  52
        62  63  71  72  94  98
 14 --   1   2   5  10  12  13  95
 15 --   1   2   6   7   8  12  23  24  32  33  36  49  69  71  74  87  89  91
 16 --   1   2   3   4   5   7  45  73 100
 17 --   1   2   7   8  12  13  86
 18 --   1   2   5   6   9  13  41  65  68  83  88  97 100
 19 --   1   2   3   5   7  13  47  96  98
 20 --   1   3   4   5   6   7  31  53  97  98
 21 --   1   2   3  10  12  13  31  68  76  78  91  96
 22 --   1   2   4   5   6   7  25  27  34  35  37  40  42  44  48  53  55  56
        57  63  64  70  74  75  76  82  85  96 100
 23 --   1   5   6   7  11  15  89
 24 --   1   2   4   6   7  15  34  53  58  72  76  95
 25 --   1   2   3   5   6  22
 26 --   1   2   3   4   5   7  39  43  49  57  74  80  93  96
 27 --   2   3   6   7  10  22  31  40  52  62  72  75  81  85  93
 28 --   1   2   6   7  11  12
 29 --   1   2   3   5   8  13  54
 30 --   1   2   5   7   8   9  73  92
 31 --   2   4   7  20  21  27  43  65  90
 32 --   1   2   4   5   7  15
 33 --   1   3   5  12  13  15
 34 --   1   5   7   8  22  24  43
 35 --   1   3   7  10  13  22  59
 36 --   1   4   6   8  13  15
 37 --   1   3   4   5  13  22  41  95
 38 --   1   2   3   6   8  12  41  67  83
 39 --   1   2   3   6   7  26  40  65  75
 40 --   3  10  11  22  27  39
 41 --   1   2   7  18  37  38  83  91  93
 42 --   1   2   4   6   8  22
 43 --   5   6  13  26  31  34  87  88
 44 --   1   2   5   6   9  22
 45 --   1   2   5   6   7  16  71
 46 --   1   3   5   6   7  11
 47 --   4   7   8   9  12  19  60  61  67  69  74  79  92  94  99
 48 --   1   2   5   9  10  22  73  86
 49 --   1   3   4   7  15  26
 50 --   1   3   5   6   7   8  89
 51 --   1   2   4   6   8  12  69
 52 --   1   2   5   6  13  27  59
 53 --   1   2  12  20  22  24
 54 --   1   2   3   7   8  29
 55 --   1   2   6   7  11  22  59  80
 56 --   1   2   5   7  12  22  78
 57 --   1   2   3   6  22  26  98
 58 --   1   2   3   5   6  24  68  99
 59 --   1   4   6  35  52  55  87
 60 --   1   2   4   7  12  47
 61 --   1   5   6   7   8  47  62
 62 --   2   7   8  13  27  61  89
 63 --   1   2   3   6  13  22
 64 --   1   2   4   6   8  22
 65 --   1   2   6  18  31  39
 66 --   1   3   5   7   8  10  80
 67 --   1   2   4  12  38  47
 68 --   1   5   6  18  21  58
 69 --   1   2   7  15  47  51
 70 --   1   4   7   8  10  22  95
 71 --   1   2   8  13  15  45
 72 --   1   5   7  13  24  27  84
 73 --   1   4   8  16  30  48
 74 --   1   2  15  22  26  47
 75 --   4   6   7  22  27  39
 76 --   1   2   7  21  22  24
 77 --   1   2   4   7   8  12
 78 --   1   2   6   7  21  56
 79 --   1   2   3   6   7  47  90
 80 --   1   6   7  26  55  66
 81 --   2   4   6   7   8  27  84
 82 --   1   2   4   6   8  22
 83 --   1   2   6  18  38  41
 84 --   1   7   8   9  72  81  92
 85 --   1   4   7   9  22  27
 86 --   3   5   6   9  17  48
 87 --   1   2   4  15  43  59
 88 --   2   5   6   7  18  43
 89 --   3   7  15  23  50  62
 90 --   1   5   6  10  31  79
 91 --   1   2   5  15  21  41
 92 --   1   4  10  30  47  84
 93 --   1   4   8  26  27  41
 94 --   1   6   7  10  13  47
 95 --   3   6  14  24  37  70
 96 --   2   5  19  21  22  26
 97 --   1   2   6   8  18  20
 98 --   2   6  13  19  20  57
 99 --   2   4   8  10  47  58
100 --   2   3   7  16  18  22
> 
> kite <- graph.empty(directed=FALSE) + LETTERS[1:10]
> kite <- kite + edges('A','B','A','C','A','D','A','F',
+                      'B','D','B','E','B','G', 'C','D','C','F', 
+                      'D','E','D','F','D','G', 'E','G', 
+                      'F','G','F','H', 'G','H', 'H','I','I','J')
> kite
IGRAPH UN-- 10 18 -- 
+ attr: name (v/c)
+ edges (vertex names):
A -- B, C, D, F
B -- A, D, E, G
C -- A, D, F
D -- A, B, C, E, F, G
E -- B, D, G
F -- A, C, D, G, H
G -- B, D, E, F, H
H -- F, G, I
I -- H, J
J -- I
> 
> proc.time()
   user  system elapsed 
   0.39    0.04    0.44 
