
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(igraph)
> 
> g <- read.graph(f <- gzfile("celegansneural.gml.gz"), format="gml")
> assortativity.degree(g)
[1] -0.2257953
> as <- assortativity(g, degree(g, mode="out"), degree(g, mode="in"))
> as
[1] -0.2257953
> 
> assR <- function(graph) { 
+   indeg <- degree(graph, mode="in")
+   outdeg <- degree(graph, mode="out")
+   el <- get.edgelist(graph, names=FALSE)
+   J <- outdeg[el[,1]]-1
+   K <- indeg[el[,2]]-1
+   num <- sum(J*K) - sum(J)*sum(K)/ecount(graph)
+   den1 <- sum(J*J) - sum(J)^2/ecount(graph)
+   den2 <- sum(K*K) - sum(K)^2/ecount(graph)
+   num / sqrt(den1) / sqrt(den2)
+ }
> as2 <- assR(g)
> abs(as-as2) < 1e-14
[1] TRUE
> 
> assortativity.degree(simplify(as.undirected(g, mode="collapse")))
[1] -0.1631992
> 
> p <- read.graph(f <- gzfile("power.gml.gz"), format="gml")
> assortativity.degree(p)
[1] 0.003456988
> assortativity(p, degree(p))
[1] 0.003456988
> assR(as.directed(p, mode="mutual"))
[1] 0.003456988
> 
> o <- read.graph(f <- gzfile("football.gml.gz"), format="gml")
> o <- simplify(o)
> an <- assortativity.nominal(o, V(o)$value+1)
> 
> el <- get.edgelist(o, names=FALSE)
> etm <- matrix(0, nr=max(V(o)$value)+1, nc=max(V(o)$value)+1)
> for (e in 1:nrow(el)) {
+   t1 <- V(o)$value[ el[e,1] ]+1
+   t2 <- V(o)$value[ el[e,2] ]+1
+   etm[t1, t2] <- etm[t1, t2] + 1
+   etm[t2, t1] <- etm[t2, t1] + 1
+ }
> etm <- etm/sum(etm)
> an2 <- ( sum(diag(etm))-sum(etm %*% etm) ) / ( 1-sum(etm %*% etm) )
> 
> abs(an - an2) < 1e-14
[1] TRUE
> 
> #####
> 
> proc.time()
   user  system elapsed 
  0.589   0.053   0.633 
